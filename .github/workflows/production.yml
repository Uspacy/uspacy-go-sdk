name: Build Docker && Deploy Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
  workflow_dispatch:

jobs:
  docker:
    outputs:
      imageTag: ${{ steps.meta.outputs.json }}
    runs-on: self-hosted
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: actions/checkout@v3.1.0
        name: Checkout current repository
      - uses: actions/checkout@v3.1.0
        name: Checkout protobuf
        with:
          repository: Uspacy/protobuf
          ref: 'v0.3'
          path: 'protobuf'
          token: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Protobuf
        run: |
             cd protobuf
             make build-go
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          CI_COMMIT_SHA: ${{ steps.date.outputs.date }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy-stage:
    runs-on: self-hosted
    needs: docker
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Get image tag
        run: echo "${{ fromJSON(needs.docker.outputs.imageTag).tags[1] }}"
      - name: Extract branch name
        shell: bash
        run: echo branch_name="${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch
      - uses: actions/checkout@v3.1.0
        name: Checkout ArgoCD manifests
        with:
          repository: Uspacy/argocd-applications
          ref: 'main'
          path: '.'
          token: ${{ secrets.DOCKER_TOKEN }}
      - name: Generate path to file for change
        run: |
          if [ "${{ steps.extract_branch.outputs.branch_name }}" == "main" ]; then
            echo APPLICATION_PATH="UA/production/${{ github.event.repository.name }}.yaml" >> $GITHUB_OUTPUT
          else
            echo APPLICATION_PATH="" >> $GITHUB_OUTPUT
          fi

        id: argocd_path
      - name: Set foobar to cool
        uses: mikefarah/yq@master
        with:
            cmd: yq -i '(.spec.source.directory.jsonnet.extVars.[] | select(.name == "dockerImage")).value="${{ fromJSON(needs.docker.outputs.imageTag).tags[1] }}"' '${{ steps.argocd_path.outputs.APPLICATION_PATH }}'
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
            commit_message: Automated Change
            branch: main
            commit_options: '--no-verify --signoff'
            commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
            commit_user_email: ms@uspacy.com # defaults to "github-actions[bot]@users.noreply.github.com"
            commit_author: Author <ms@uspacy.com> # defaults to author of the commit that triggered the run